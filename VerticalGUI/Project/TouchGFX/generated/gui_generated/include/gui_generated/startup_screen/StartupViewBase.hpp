/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef STARTUP_VIEW_BASE_HPP
#define STARTUP_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/startup_screen/StartupPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>

class StartupViewBase : public touchgfx::View<StartupPresenter>
{
public:
    StartupViewBase();
    virtual ~StartupViewBase() {}

    virtual void setupScreen();
    virtual void handleTickEvent();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::FadeAnimator< touchgfx::TextArea > TakeMin;
    touchgfx::FadeAnimator< touchgfx::TextArea > GettingReady;
    touchgfx::FadeAnimator< touchgfx::TextArea > Hi;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButton1;

private:

    /*
     * Interaction Handlers
     */
    void hi_FadeInEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp);
    void hi_FadeOutEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp);
    void gettingReady_FadeInEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp);
    void getting_FadeOutEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp);
    void takeMin_FadeInEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp);

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Delay Variable Declarations
     */
    static const uint16_t HIWAIT_DURATION = 180;
    uint16_t hiWaitCounter;
    static const uint16_t GETTINGWAIT_DURATION = 181;
    uint16_t gettingWaitCounter;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<StartupViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Interaction Callback Declarations
     */
    touchgfx::Callback < StartupViewBase, const touchgfx::FadeAnimator<touchgfx::TextArea>& >  hi_FadeInEndedCallback;
    touchgfx::Callback < StartupViewBase, const touchgfx::FadeAnimator<touchgfx::TextArea>& >  hi_FadeOutEndedCallback;
    touchgfx::Callback < StartupViewBase, const touchgfx::FadeAnimator<touchgfx::TextArea>& >  gettingReady_FadeInEndedCallback;
    touchgfx::Callback < StartupViewBase, const touchgfx::FadeAnimator<touchgfx::TextArea>& >  getting_FadeOutEndedCallback;
    touchgfx::Callback < StartupViewBase, const touchgfx::FadeAnimator<touchgfx::TextArea>& >  takeMin_FadeInEndedCallback;

};

#endif // STARTUP_VIEW_BASE_HPP
